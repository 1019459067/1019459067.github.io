<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>上传Github的代码添加Cocoapods支持</title>
      <link href="/2019/03/24/%E4%B8%8A%E4%BC%A0Github%E7%9A%84%E4%BB%A3%E7%A0%81%E6%B7%BB%E5%8A%A0Cocoapods%E6%94%AF%E6%8C%81/"/>
      <url>/2019/03/24/%E4%B8%8A%E4%BC%A0Github%E7%9A%84%E4%BB%A3%E7%A0%81%E6%B7%BB%E5%8A%A0Cocoapods%E6%94%AF%E6%8C%81/</url>
      
        <content type="html"><![CDATA[<p>这里我将从最初的开始进行介绍，包括Github上创建项目已经上传项目，到最后的支持Cocoapods。这里主要以Objecte-C为例介绍。</p><h3 id="一、上传代码至GitHub"><a href="#一、上传代码至GitHub" class="headerlink" title="一、上传代码至GitHub"></a>一、上传代码至GitHub</h3><p>至于如何创建GitHub账号，请自行百度。</p><h5 id="1、首先我们打开github-com，然后创建自己的项目工程"><a href="#1、首先我们打开github-com，然后创建自己的项目工程" class="headerlink" title="1、首先我们打开github.com，然后创建自己的项目工程"></a>1、首先我们打开github.com，然后创建自己的项目工程</h5><p><img src="/2019/03/24/上传Github的代码添加Cocoapods支持/001.jpg" alt><br>这里注意那个MIT License，在后面添加Cocoapods支持的时候会用到（稍后介绍）。</p><h5 id="2、点击创建仓库，然后将仓库clone到本地"><a href="#2、点击创建仓库，然后将仓库clone到本地" class="headerlink" title="2、点击创建仓库，然后将仓库clone到本地"></a>2、点击创建仓库，然后将仓库clone到本地</h5><p><img src="/2019/03/24/上传Github的代码添加Cocoapods支持/002.jpg" alt></p><h5 id="3、将工程上传至仓库中"><a href="#3、将工程上传至仓库中" class="headerlink" title="3、将工程上传至仓库中"></a>3、将工程上传至仓库中</h5><p><img src="/2019/03/24/上传Github的代码添加Cocoapods支持/003.jpg" alt></p><p>这里的LICENSE就是刚才说的MIT License添加的文件。CameraDemo是示例工程，WHCamera就是提供给他人使用的库。<br>然后提交到Github就可以了。</p><h3 id="二、创建podspec文件"><a href="#二、创建podspec文件" class="headerlink" title="二、创建podspec文件"></a>二、创建podspec文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">➜  CameraDemo git:(master) ✗ pod spec create WHCamera</span><br><span class="line"></span><br><span class="line">Specification created at WHCamera.podspec</span><br><span class="line">➜  CameraDemo git:(master) ✗ ls</span><br><span class="line">CameraDemo           LICENSE              WHCamera</span><br><span class="line">CameraDemo.xcodeproj README.md            WHCamera.podspec</span><br></pre></td></tr></table></figure><p>此时在工程文件夹下也会多一个<code>WHCamera.podspec</code>文件。</p><h3 id="三、编辑podspec文件"><a href="#三、编辑podspec文件" class="headerlink" title="三、编辑podspec文件"></a>三、编辑podspec文件</h3><p>这里用Sublime Text打开并做了如下编辑。<a href="https://guides.cocoapods.org/syntax/podspec.html#specification" target="_blank" rel="noopener">关于podspec文件详解</a></p><p>这里我做的编辑更新如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Pod::Spec.new do |s|</span><br><span class="line">  s.name         = &quot;WHCamera&quot;</span><br><span class="line">  s.version      = &quot;0.0.1&quot;</span><br><span class="line">  s.summary      = &quot;A Library for iOS to use for Camera.&quot;</span><br><span class="line">  s.description  = &lt;&lt;-DESC</span><br><span class="line">                    &quot;基于Object-C的iOS纯原生API相机，高度集成，使用快捷简单。可快速集成使用。最低支持iOS7的系统。&quot;</span><br><span class="line">                   DESC</span><br><span class="line">  s.platform     = :ios, &quot;7.0&quot;</span><br><span class="line">  s.homepage     = &quot;https://github.com/1019459067/CameraDemo&quot;</span><br><span class="line">  s.license      = &quot;MIT&quot;</span><br><span class="line">  s.author       = &#123; &quot;xiaoweihua&quot; =&gt; &quot;1019459067@qq.com&quot; &#125;</span><br><span class="line">  s.source       = &#123; :git =&gt; &quot;https://github.com/1019459067/CameraDemo.git&quot;, :tag =&gt; &quot;#&#123;s.version&#125;&quot; &#125;</span><br><span class="line">  s.source_files  = &quot;WHCamera/*.&#123;h,m&#125;&quot;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h3 id="四、验证podspec文件"><a href="#四、验证podspec文件" class="headerlink" title="四、验证podspec文件"></a>四、验证podspec文件</h3><p>接下来执行下面的命令进行验证：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  CameraDemo git:(master) ✗ pod lib lint WHCamera.podspec</span><br></pre></td></tr></table></figure><p>成功的结果如下：</p><p><img src="/2019/03/24/上传Github的代码添加Cocoapods支持/004.jpg" alt></p><p>若失败则根据提示做对应修改，一开始我没有选定平台<code>s.platform = :ios, &quot;7.0&quot;</code>，所以一直报错。</p><h3 id="五、在Github上创建release版本"><a href="#五、在Github上创建release版本" class="headerlink" title="五、在Github上创建release版本"></a>五、在Github上创建release版本</h3><p><img src="/2019/03/24/上传Github的代码添加Cocoapods支持/005.jpg" alt><br><img src="/2019/03/24/上传Github的代码添加Cocoapods支持/006.jpg" alt><br><img src="/2019/03/24/上传Github的代码添加Cocoapods支持/007.jpg" alt></p><h3 id="六、注册CocoaPods账号"><a href="#六、注册CocoaPods账号" class="headerlink" title="六、注册CocoaPods账号"></a>六、注册CocoaPods账号</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  CameraDemo git:(master) pod trunk register xxxxxx@qq.com &apos;用户名&apos;</span><br><span class="line">[!] Please verify the session by clicking the link in the verification email that has been sent to xxxxxx@qq.com</span><br></pre></td></tr></table></figure><p>打开邮件中的链接, 这样就成功注册了Cocoapods账号。</p><p>检查是否创建成功的命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  CameraDemo git:(master) pod trunk me</span><br><span class="line">  - Name:     用户名</span><br><span class="line">  - Email:    xxxxxx@qq.com</span><br><span class="line">  - Since:    March 24th, 08:07</span><br><span class="line">  - Pods:     None</span><br><span class="line">  - Sessions:</span><br><span class="line">    - March 24th, 08:07 - July 30th, 08:08. IP: 113.92.152.160</span><br><span class="line">➜  CameraDemo git:(master)</span><br></pre></td></tr></table></figure><h3 id="七、上传代码到CocoaPods"><a href="#七、上传代码到CocoaPods" class="headerlink" title="七、上传代码到CocoaPods"></a>七、上传代码到CocoaPods</h3><p>首先检测文件格式的有效性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">➜  CameraDemo git:(master) ✗ pod spec lint</span><br><span class="line"></span><br><span class="line"> -&gt; WHCamera (0.0.1)</span><br><span class="line">    - NOTE  | xcodebuild:  note: Using new build system</span><br><span class="line">    - NOTE  | [iOS] xcodebuild:  note: Planning build</span><br><span class="line">    - NOTE  | [iOS] xcodebuild:  note: Constructing build description</span><br><span class="line">    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target &apos;App&apos;)</span><br><span class="line"></span><br><span class="line">Analyzed 1 podspec.</span><br><span class="line"></span><br><span class="line">WHCamera.podspec passed validation.</span><br><span class="line"></span><br><span class="line">➜  CameraDemo git:(master) ✗</span><br></pre></td></tr></table></figure><p>警告可以使用<code>--allow-warnings</code>忽略.</p><p>出现<code>passed validation</code>就说明通过验证了。然后执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod trunk push WHCamera.podspec --allow-warnings</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod trunk push</span><br></pre></td></tr></table></figure><p>成功的结果如下：<br><img src="/2019/03/24/上传Github的代码添加Cocoapods支持/008.jpg" alt></p><p>好像这个地方需要等待很长时间～～～</p><h3 id="八、检查上传是否成功"><a href="#八、检查上传是否成功" class="headerlink" title="八、检查上传是否成功"></a>八、检查上传是否成功</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod search WHCamera</span><br></pre></td></tr></table></figure><p>第一次搜索失败：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[!] Unable to find a pod with name, author, summary, or description matching `WHCamera`</span><br></pre></td></tr></table></figure><p>如果搜索不到，建议删除本地的CocoaPods的搜索目录，执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  rm ~/Library/Caches/CocoaPods/search_index.json</span><br></pre></td></tr></table></figure><p><img src="/2019/03/24/上传Github的代码添加Cocoapods支持/009.jpg" alt></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac下使用免费实现内网穿透</title>
      <link href="/2019/01/27/Mac%E4%B8%8B%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
      <url>/2019/01/27/Mac%E4%B8%8B%E4%BD%BF%E7%94%A8%E5%85%8D%E8%B4%B9%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="一、环境"><a href="#一、环境" class="headerlink" title="一、环境"></a>一、环境</h1><p>MacOS Mojava(此条件非必须)</p><h1 id="二、ngrok"><a href="#二、ngrok" class="headerlink" title="二、ngrok"></a>二、<a href="https://ngrok.com/" target="_blank" rel="noopener">ngrok</a></h1><p>下载地址：<a href="https://ngrok.com/download" target="_blank" rel="noopener">https://ngrok.com/download</a><br><img src="/2019/01/27/Mac下使用免费实现内网穿透/001.png" alt></p><h1 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h1><p>1、下载之后直接解压得到 一个 ngrok 文件</p><p>2、直接终端运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ chmod a+x ngrok</span><br></pre></td></tr></table></figure></p><p>即可修改权限。</p><p>3、开启服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ ./ngrok http localhost:8080</span><br></pre></td></tr></table></figure></p><p>4、结果如下：<br><img src="/2019/01/27/Mac下使用免费实现内网穿透/002.png" alt></p><p>5、http、https服务器即可通过手机4G网络访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://8dfccac4.ngrok.io</span><br><span class="line">https://8dfccac4.ngrok.io</span><br></pre></td></tr></table></figure></p><h1 id="四、问题"><a href="#四、问题" class="headerlink" title="四、问题"></a>四、问题</h1><p>需要主要的是！！！！➜ 必须开启web服务</p><p>若没开启出现如下错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">**Failed to complete tunnel connection**</span><br><span class="line"></span><br><span class="line">The connection to [**https://8dfccac4.ngrok.io**](https://8dfccac4.ngrok.io/) was successfully tunneled to your ngrok client, but the client failed to establish a connection to the local address [**localhost:8080**](http://localhost:8080/).</span><br><span class="line"></span><br><span class="line">Make sure that a web service is running on [**localhost:8080**](http://localhost:8080/) and that it is a valid address.</span><br><span class="line"></span><br><span class="line">The error encountered was: **dial tcp** [**::1**]**:8080: getsockopt: connection refused**</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>iOS FFmpeg学习资料总结</title>
      <link href="/2018/08/16/iOS-FFmpeg%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%80%BB%E7%BB%93/"/>
      <url>/2018/08/16/iOS-FFmpeg%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><p>目标：安装ffmpeg-3.4.2（这里根据脚本自动安装的，可能不是目前最新版，需要的请自行更改脚步）</p><p>推荐一个非常好用的编译<a href="https://github.com/kewlbear/FFmpeg-iOS-build-script" target="_blank" rel="noopener">FFmpeg脚本</a>.</p><p>在终端cd到刚才下载的脚本，执行<code>./build-ffmpeg.sh</code>,如果你没安装Yasm不用担心，脚本会提示你，你只需要按照提示，脚本会自动帮你下载（这一步网上很多说要自己先安装，反正我是没有，按照脚本提示一步到位），可谓是一键式编译。</p><p>等待大概十几分钟。。。输出结果如下：</p><p>验证编译结果如下：</p><p><img src="/2018/08/16/iOS-FFmpeg学习资料总结/001.png" alt></p><p>在终端cd到FFmpeg-iOS里面的lib文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lipo -info libavfilter.a</span><br><span class="line">Architectures in the fat file: libavfilter.a are: armv7 i386 x86_64 arm64</span><br></pre></td></tr></table></figure><p>说明：<br><code>armv7</code> <code>arm64</code> <code>i386</code> <code>x86_64</code>这些是什么，其实这些是处理器的指令集。</p><ul><li><code>armv7</code>、<code>arm64</code>是ARM处理器的指令集，真机所支持的架构。目前iOS主要支持<code>arm64</code>.</li><li><code>i386</code> 、<code>x86_64</code>是Mac系统处理器指令集，模拟器32位、64所支持的架构。</li></ul><h2 id="二、验证安装"><a href="#二、验证安装" class="headerlink" title="二、验证安装"></a>二、验证安装</h2><p>###1、环境</p><p>Xcode：Version 9.4.1</p><p>MacOS High Sierra：Version 10.13.6</p><p>###2、配置<br>新建Xcode工程命名FFmpegDemo，上面编译好的FFmpeg-iOS添加到工程里面。</p><p>a、设置头文件路径，<code>Header Search Paths</code>-&gt;<code>$(SRCROOT)/FFmpeg-iOS/include</code><br><img src="/2018/08/16/iOS-FFmpeg学习资料总结/002.png" alt><br>b、设置库文件路径，<code>Library Search Paths</code>-&gt;<code>$(PROJECT_DIR)/FFmpeg-iOS/lib</code><br><img src="/2018/08/16/iOS-FFmpeg学习资料总结/003.png" alt><br>c、配置缺失的库，主要包括<code>CoreMedia.framework</code>、<code>AudioToolbox.framework</code>、<code>VideoToolbox.framework</code>、<code>libiconv.tbd</code>、<code>libbz2.tbd、libz.tbd</code>。<br><img src="/2018/08/16/iOS-FFmpeg学习资料总结/004.png" alt><br>完成后结果分别如下：</p><p>###3、验证</p><p>在<code>ViewController.m</code>中输入如下代码进行验证：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#import &quot;ViewController.h&quot;</span><br><span class="line">#include &lt;libavcodec/avcodec.h&gt;</span><br><span class="line"></span><br><span class="line">@interface ViewController ()</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation ViewController</span><br><span class="line"></span><br><span class="line">- (void)viewDidLoad &#123;</span><br><span class="line">    [super viewDidLoad];</span><br><span class="line">    // Do any additional setup after loading the view, typically from a nib.</span><br><span class="line">    </span><br><span class="line">    printf(&quot;%s&quot;,avcodec_configuration());</span><br><span class="line">    UILabel *lab = [UILabel new];</span><br><span class="line">    lab.text = [NSString stringWithUTF8String:avcodec_configuration()];</span><br><span class="line">    lab.numberOfLines = 0;</span><br><span class="line">    lab.frame = self.view.bounds;</span><br><span class="line">    [self.view addSubview:lab];</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动运行程序，结果如下，说明配置成功。</p><p><img src="/2018/08/16/iOS-FFmpeg学习资料总结/005.png" alt></p><h2 id="三、视频播放器原理"><a href="#三、视频播放器原理" class="headerlink" title="三、视频播放器原理"></a>三、视频播放器原理</h2><p>这里主要参考<a href="https://www.jianshu.com/p/e4ab6fcc7742" target="_blank" rel="noopener">视频播放器原理及相关基础知识介绍</a>。</p><p>播放一个视频文件的流程如下：<br><img src="/2018/08/16/iOS-FFmpeg学习资料总结/006.png" alt></p><h4 id="1、封装格式的作用："><a href="#1、封装格式的作用：" class="headerlink" title="1、封装格式的作用："></a>1、封装格式的作用：</h4><p>视频码流和音频码流按照一定的格式存储在一个文件中。</p><p>MPEG2-TS和FLV格式简介：<br><img src="/2018/08/16/iOS-FFmpeg学习资料总结/007.png" alt></p><h4 id="2、封装格式："><a href="#2、封装格式：" class="headerlink" title="2、封装格式："></a>2、封装格式：</h4><p><img src="/2018/08/16/iOS-FFmpeg学习资料总结/008.png" alt></p><h4 id="3、H264格式简介以及压缩方法"><a href="#3、H264格式简介以及压缩方法" class="headerlink" title="3、H264格式简介以及压缩方法"></a>3、H264格式简介以及压缩方法</h4><ul><li>I:红色的帧，当作图片直接压缩。特点：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.它是一个全帧压缩编码帧。它将全帧图像信息进行JPEG压缩编码及传输;</span><br><span class="line">2.解码时仅用I帧的数据就可重构完整图像;</span><br><span class="line">3.I帧描述了图像背景和运动主体的详情;</span><br><span class="line">4.I帧不需要参考其他画面而生成;</span><br><span class="line">5.I帧是P帧和B帧的参考帧(其质量直接影响到同组中以后各帧的质量);</span><br><span class="line">6.I帧是帧组GOP的基础帧(第一帧),在一组中只有一个I帧;</span><br><span class="line">7.I帧不需要考虑运动矢量;</span><br><span class="line">8.I帧所占数据的信息量比较大。</span><br></pre></td></tr></table></figure><ul><li>P:蓝色的帧。以I帧为参考帧。前向预测编码帧。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.P帧是I帧后面相隔1~2帧的编码帧;</span><br><span class="line">2.P帧采用运动补偿的方法传送它与前面的I或P帧的差值及运动矢量(预测误差);</span><br><span class="line">3.解码时必须将I帧中的预测值与预测误差求和后才能重构完整的P帧图像;</span><br><span class="line">4.P帧属于前向预测的帧间编码。它只参考前面最靠近它的I帧或P帧;</span><br><span class="line">5.P帧可以是其后面P帧的参考帧,也可以是其前后的B帧的参考帧;</span><br><span class="line">6.由于P帧是参考帧,它可能造成解码错误的扩散;</span><br><span class="line">7.由于是差值传送,P帧的压缩比较高。</span><br></pre></td></tr></table></figure><ul><li>B:绿色的帧.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.B帧是由前面的I或P帧和后面的P帧来进行预测的;</span><br><span class="line">2.B帧传送的是它与前面的I或P帧和后面的P帧之间的预测误差及运动矢量;</span><br><span class="line">3.B帧是双向预测编码帧;</span><br><span class="line">4.B帧压缩比最高,因为它只反映丙参考帧间运动主体的变化情况,预测比较准确;</span><br><span class="line">5.B帧不是参考帧,不会造成解码错误的扩散。</span><br></pre></td></tr></table></figure><h2 id="四、音频编码数据"><a href="#四、音频编码数据" class="headerlink" title="四、音频编码数据"></a>四、音频编码数据</h2><h4 id="1、音频编码的作用。"><a href="#1、音频编码的作用。" class="headerlink" title="1、音频编码的作用。"></a>1、音频编码的作用。</h4><p>将音频采集数据压缩成为音频码流，从而降低音频的数据量。</p><h4 id="2、音频格式"><a href="#2、音频格式" class="headerlink" title="2、音频格式"></a>2、音频格式</h4><p><img src="/2018/08/16/iOS-FFmpeg学习资料总结/009.png" alt></p><h4 id="3、ACC格式简介以及简介"><a href="#3、ACC格式简介以及简介" class="headerlink" title="3、ACC格式简介以及简介"></a>3、ACC格式简介以及简介</h4><p>数据由大小不固定的ADTS构成.压缩方法复杂，可以将音频数据压缩10倍以上.</p><h2 id="五、视频像素数据"><a href="#五、视频像素数据" class="headerlink" title="五、视频像素数据"></a>五、视频像素数据</h2><p>1、视频像素数据作用</p><p>保存了屏幕上每个像素点的像素值.</p><p>2、格式</p><p>RGB24、RGB32、YUV420P、YUV422P、YUV444P。常用的为YUV420P。</p><p>3、特点</p><p>体积很大。一般情况1小时高清视频的RGB24格式的数据体积为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3600*25*1920*1080*3=559GByte</span><br></pre></td></tr></table></figure><p>PS:这里帧率为25Hz，取样精度8bit.</p><p>4、RGB格式简介</p><p><img src="/2018/08/16/iOS-FFmpeg学习资料总结/010.png" alt></p><p>5、YUV格式简介<br><img src="/2018/08/16/iOS-FFmpeg学习资料总结/011.png" alt></p><h2 id="六、音频采样数据"><a href="#六、音频采样数据" class="headerlink" title="六、音频采样数据"></a>六、音频采样数据</h2><p>1、音频采样数据作用</p><p>保存了音频中每个采样点的值。</p><p>2、特点</p><p>体积很大。一般情况一首4分钟的PCM格式的歌曲体积为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4*60*44100*2*2=42.3MByte</span><br></pre></td></tr></table></figure><p>PS:假定采样率为44100Hz，采样精度为16bit.</p><h2 id="七、视频解码知识"><a href="#七、视频解码知识" class="headerlink" title="七、视频解码知识"></a>七、视频解码知识</h2><p>1、纯净的视频解码流程</p><ul><li>压缩编码数据-&gt;像素数据</li><li>例如解码H.264，就是“H.264-&gt;YUV”</li></ul><p>2、一般的视频解码流程</p><ul><li>视频码流一般存储在一定的封装格式中。封装格式中通常还包含音频码流等内容。</li><li>对于封装格式中的视频，需要先从封装的格式中的提取视频码流，然后在进行解码。</li><li>例如解码MKV格式的视频文件，就是“MKV-&gt;H.264码流-&gt;YUV”。</li></ul><h2 id="八、FFmpeg解码的函数"><a href="#八、FFmpeg解码的函数" class="headerlink" title="八、FFmpeg解码的函数"></a>八、FFmpeg解码的函数</h2><p>1、FFmpeg解码的流程图如下所示：<br><img src="/2018/08/16/iOS-FFmpeg学习资料总结/012.png" alt></p><p>2、FFmpeg解码函数简介<br><img src="/2018/08/16/iOS-FFmpeg学习资料总结/013.png" alt></p><p>3、FFmpeg解码的数据结构<br><img src="/2018/08/16/iOS-FFmpeg学习资料总结/014.png" alt></p><p>4、FFmpeg数据结构分析<br><img src="/2018/08/16/iOS-FFmpeg学习资料总结/015.png" alt><br><img src="/2018/08/16/iOS-FFmpeg学习资料总结/016.png" alt><br><img src="/2018/08/16/iOS-FFmpeg学习资料总结/017.png" alt></p><p>5、解码后的数据为什么要经过sws_scale()函数处理？<br><img src="/2018/08/16/iOS-FFmpeg学习资料总结/018.png" alt></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>iOS逆向之移除Oplayer lite广告</title>
      <link href="/2018/08/06/iOS%E9%80%86%E5%90%91%E4%B9%8B%E7%A7%BB%E9%99%A4Oplayer-lite%E5%B9%BF%E5%91%8A/"/>
      <url>/2018/08/06/iOS%E9%80%86%E5%90%91%E4%B9%8B%E7%A7%BB%E9%99%A4Oplayer-lite%E5%B9%BF%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<h3 id="一、环境要求："><a href="#一、环境要求：" class="headerlink" title="一、环境要求："></a>一、环境要求：</h3><p>1、iPod touch6: iOS10.3.1(已经越狱)</p><p>2、Xcode安装<a href="https://github.com/AloneMonkey/MonkeyDev/wiki/%E5%AE%89%E8%A3%85" target="_blank" rel="noopener">MonkeyDev</a></p><p>3、OPlayer Lite.ipa(Window PP助手获取)【非必须】</p><h3 id="二、lldb调试定位"><a href="#二、lldb调试定位" class="headerlink" title="二、lldb调试定位"></a>二、lldb调试定位</h3><p>1、直接在app store上下载Oplayer lite播放神器，为了方便调试，最好将设备设置成语言英文，后面会用到！</p><p>2、通过ssh连接越狱设备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@172.20.134.8</span><br></pre></td></tr></table></figure><p>3、关闭设备上的其他进程，最好只保留Oplayer lite，通过以下命令获取设备上所有运行的进程，只查看目标进程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iPod:~ root# ps aux | grep OPlayer</span><br><span class="line">mobile    6593   3.6  6.5  1384832  66024   ??  Ss    5:27PM   0:20.84 /var/containers/Bundle/Application/AAAB1B0F-A9A6-455C-BE5B-8E0230A75252/OPlayer Lite.app/OPlayer Lite</span><br><span class="line">root      6607   0.0  0.0   624224      8 s000  R+    5:29PM   0:00.00 grep OPlayer</span><br></pre></td></tr></table></figure><p>4、根据教程<a href="https://www.jianshu.com/p/c3becee8d7d4" target="_blank" rel="noopener">iOS10.3.1 砸壳之路</a>使用两种方式进行应用砸壳,这里笔者就不详述了。</p><p>笔者通过第一种静态方式结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">iPod:~ root# Clutch -i</span><br><span class="line">Installed apps:</span><br><span class="line">1:   快拍 - Snapchat &lt;com.toyopagroup.picaboo&gt;</span><br><span class="line">2:   优酷视频-世界杯赛事全程高清直播 &lt;com.youku.YouKu&gt;</span><br><span class="line">3:   央视影音 &lt;cn.vuclip.mobiletv&gt;</span><br><span class="line">4:   A4 Player &lt;com.pd.A4Player&gt;</span><br><span class="line">5:   可可英语-英语听力口语训练神器 &lt;com.kekenet.kkyy&gt;</span><br><span class="line">6:   VPN Plus Privacy Protector &lt;vpn.free.proxy.FreeVPN-Plus&gt;</span><br><span class="line">7:   搜狐视频-法医秦明1、2两季独家连播 &lt;com.sohu.iPhoneVideo&gt;</span><br><span class="line">8:   微博 &lt;com.sina.weibo&gt;</span><br><span class="line">9:   腾讯视频 &lt;com.tencent.live4iphone&gt;</span><br><span class="line">10:  Shazam 音乐神搜 &lt;com.shazam.Shazam&gt;</span><br><span class="line">11:  OPlayer Lite - media player &lt;com.olimsoft.oplayer.lite&gt;</span><br><span class="line">12:  VPN - Super Unlimited Proxy &lt;mobi.mobilejump.freevpn&gt;</span><br><span class="line">13:  天天快报 - 腾讯兴趣阅读平台 &lt;com.tencent.reading&gt;</span><br><span class="line">iPod:~ root# Clutch -d 11</span><br><span class="line">Zipping OPlayer Lite.app</span><br><span class="line">Error: Could not obtain mach port, either the process is dead (codesign error?) or entitlements were not properly signed!</span><br><span class="line"></span><br><span class="line">Error: Failed to dump &lt;OPlayer WatchKit Extension&gt; with arch arm64</span><br><span class="line"></span><br><span class="line">2018-08-06 17:36:20.796 Clutch[6610:278690] failed operation :(</span><br><span class="line">2018-08-06 17:36:20.796 Clutch[6610:278690] application &lt;NSOperationQueue: 0x1004be080&gt;&#123;name = &apos;NSOperationQueue 0x1004be080&apos;&#125;</span><br><span class="line">Error: Failed to dump &lt;OPlayer WatchKit Extension&gt;</span><br><span class="line"></span><br><span class="line">2018-08-06 17:36:20.797 Clutch[6610:278690] failed operation :(</span><br><span class="line">2018-08-06 17:36:20.797 Clutch[6610:278690] application &lt;NSOperationQueue: 0x1004be080&gt;&#123;name = &apos;NSOperationQueue 0x1004be080&apos;&#125;</span><br><span class="line">ASLR slide: 0x100020000</span><br><span class="line">Dumping &lt;OPlayer Lite&gt; (arm64)</span><br><span class="line">Patched cryptid (64bit segment)</span><br><span class="line">Writing new checksum</span><br><span class="line">Zipping OPlayer WatchKit Extension.appex</span><br><span class="line">FAILED: &lt;OPlayer Lite bundleID: com.olimsoft.oplayer.lite&gt;</span><br><span class="line">Finished dumping com.olimsoft.oplayer.lite in 20.9 seconds</span><br></pre></td></tr></table></figure><p>很遗憾失败了，其原因自行百度。。。</p><p>所以最好通过动态砸壳来解决，若是大佬能通过Clutch方式解决，请私信me!!!</p><p>5、查看广告存在的位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">iPod:~ root# cycript -p 6593          </span><br><span class="line">cy# [[UIApp keyWindow] recursiveDescription].toString()</span><br><span class="line"></span><br><span class="line">`&lt;UIWindow: 0x102661a40; frame = (0 0; 320 568); opaque = NO; autoresize = RM+BM; gestureRecognizers = &lt;NSArray: 0x17024f540&gt;; layer = &lt;UIWindowLayer: 0x170229900&gt;&gt;</span><br><span class="line">   | &lt;UITransitionView: 0x10d4e6eb0; frame = (0 0; 320 568); autoresize = W+H; layer = &lt;CALayer: 0x170634b40&gt;&gt;</span><br><span class="line">   |    | &lt;UIView: 0x10d43e5f0; frame = (0 0; 320 568); autoresize = W+H; autoresizesSubviews = NO; layer = &lt;CALayer: 0x17042f420&gt;&gt;</span><br><span class="line">   |    |    | &lt;UIView: 0x10d405740; frame = (0 0; 320 568); layer = &lt;CALayer: 0x17042f620&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;PlayerView: 0x10d43d560; frame = (0 0; 320 568); layer = &lt;CAEAGLLayer: 0x17042f680&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;AVPlayerDemoPlaybackView: 0x10d400320; frame = (0 0; 320 568); layer = &lt;AVPlayerLayer: 0x170633d20&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;AVPlayerLayerIntermediateLayer: 0x1706344e0&gt; (layer)</span><br><span class="line">   |    |    |    |    |    | &lt;FigVideoContainerLayer: 0x1704578b0&gt; (layer)</span><br><span class="line">   |    |    |    |    |    |    | &lt;FigVideoLayer: 0x17065cf80&gt; (layer)</span><br><span class="line">   |    |    |    |    |    | &lt;FigSubtitleCALayer: 0x170457c40&gt; (layer)</span><br><span class="line">   |    |    |    |    |    | &lt;AVPlayerLayerIntermediateLayer: 0x170628300&gt; (layer)</span><br><span class="line">   |    |    | &lt;SubtitleLabel: 0x1026f95d0; baseClass = UILabel; frame = (0 0; 320 40); text = &apos;&apos;; userInteractionEnabled = NO; layer = &lt;_UILabelLayer: 0x170291120&gt;&gt;</span><br><span class="line">   |    |    | &lt;UILabel: 0x10d4025d0; frame = (0 62; 320 20); text = &apos;IMG_4758.MOV&apos;; userInteractionEnabled = NO; layer = &lt;_UILabelLayer: 0x170290360&gt;&gt;</span><br><span class="line">   |    |    | &lt;UILabel: 0x10d410650; frame = (0 52; 320 50); text = &apos;&apos;; userInteractionEnabled = NO; layer = &lt;_UILabelLayer: 0x17029e6e0&gt;&gt;</span><br><span class="line">   |    |    | &lt;UIView: 0x1027b8070; frame = (0 0; 320 50); layer = &lt;CALayer: 0x174229e20&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x102734a50; frame = (0 0; 320 50); opaque = NO; layer = &lt;CALayer: 0x174229dc0&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d435250; frame = (0 0; 320 50); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170635e80&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UILabel: 0x10271ed60; frame = (60 0; 260 50); text = &apos;Buy the full version to r...&apos;; userInteractionEnabled = NO; layer = &lt;_UILabelLayer: 0x174283fc0&gt;&gt;</span><br><span class="line">   |    |    | &lt;RoundedRectView: 0x10265a540; frame = (0 0; 320 64); layer = &lt;CALayer: 0x170429de0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;PlaySeekView: 0x10d40c050; frame = (39 22; 242 32); layer = &lt;CALayer: 0x170427700&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UILabel: 0x10d452980; frame = (0 3; 60 25); text = &apos;00:00:03&apos;; userInteractionEnabled = NO; tag = 10000; layer = &lt;_UILabelLayer: 0x170292110&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;OBSlider: 0x10267c790; baseClass = UISlider; frame = (60 5; 118 22); opaque = NO; tag = 10002; layer = &lt;CALayer: 0x170427000&gt;; value: 3.000000&gt;</span><br><span class="line">   |    |    |    |    |    | &lt;UIView: 0x10d42e1e0; frame = (39 7; 77 8); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170635c80&gt;&gt;</span><br><span class="line">   |    |    |    |    |    |    | &lt;UIImageView: 0x10d421cd0; frame = (-37 0; 114 8); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170635cc0&gt;&gt;</span><br><span class="line">   |    |    |    |    |    | &lt;UIImageView: 0x10d429350; frame = (2 7; 37 8); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170635d20&gt;&gt;</span><br><span class="line">   |    |    |    |    |    | &lt;UIImageView: 0x102692290; frame = (24 -4; 30 30); opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170635d80&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UILabel: 0x10d425830; frame = (178 3; 64 25); text = &apos;-00:00:07&apos;; userInteractionEnabled = NO; tag = 10001; layer = &lt;_UILabelLayer: 0x17028d9d0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d404790; frame = (258 6; 58 50); opaque = NO; layer = &lt;CALayer: 0x1704351c0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4192a0; frame = (0 6; 58 54); opaque = NO; layer = &lt;CALayer: 0x1704298a0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d420dc0; frame = (268 16; 48 44); opaque = NO; layer = &lt;CALayer: 0x170426760&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x102770f80; frame = (2 7; 44 30); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x17422c700&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d424e50; frame = (4 16; 48 44); opaque = NO; layer = &lt;CALayer: 0x170429c20&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d4b9eb0; frame = (2 7; 44 30); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170635c40&gt;&gt;</span><br><span class="line">   |    |    | &lt;NewRoundedRectView: 0x10d4a96a0; frame = (-5 480; 330 90); layer = &lt;CALayer: 0x17062cce0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x1026a2c40; frame = (34 4; 44 44); opaque = NO; layer = &lt;CALayer: 0x170429780&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d4e0240; frame = (6.5 6.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170635bc0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d42f130; frame = (86 4; 44 44); opaque = NO; layer = &lt;CALayer: 0x170424520&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d4de1b0; frame = (6.5 6.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170635ae0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d404a60; frame = (138 4; 44 44); opaque = NO; layer = &lt;CALayer: 0x170426040&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d4dc1d0; frame = (6.5 6.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170635a20&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d416000; frame = (190 4; 44 44); opaque = NO; layer = &lt;CALayer: 0x170427220&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d4d3830; frame = (6.5 6.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x1706359e0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d434c00; frame = (242 4; 44 44); opaque = NO; layer = &lt;CALayer: 0x1704291c0&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d4d58c0; frame = (6.5 6.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170635980&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;MPVolumeView: 0x10d4c7520; frame = (20 56; 240 30); opaque = NO; layer = &lt;CALayer: 0x170632ea0&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;MPButton: 0x10d4c80b0; baseClass = UIButton; frame = (218.5 2; 21.5 18); opaque = NO; autoresize = LM+BM; layer = &lt;CALayer: 0x170428480&gt;&gt;</span><br><span class="line">   |    |    |    |    |    | &lt;UIImageView: 0x10d4c83e0; frame = (-39.25 -41; 100 100); alpha = 0; opaque = NO; userInteractionEnabled = NO; tag = 1886548836; layer = &lt;CALayer: 0x170631b00&gt;&gt;</span><br><span class="line">   |    |    |    |    |    | &lt;UIImageView: 0x10d4d1850; frame = (0 0; 21.5 18); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x1706358e0&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;MPVolumeSlider: 0x10d4c7920; baseClass = UISlider; frame = (0 -5; 211.5 28); opaque = NO; autoresize = W+BM; layer = &lt;CALayer: 0x17062b6c0&gt;; value: 0.000000&gt;</span><br><span class="line">   |    |    |    |    |    | &lt;UIView: 0x10d498720; frame = (2 10; 207.5 8); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170635460&gt;&gt;</span><br><span class="line">   |    |    |    |    |    |    | &lt;UIImageView: 0x10d425ac0; frame = (0 0; 207.5 8); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170635560&gt;&gt;</span><br><span class="line">   |    |    |    |    |    | &lt;UIImageView: 0x10d4bc0f0; frame = (2 10; 0 8); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x1706355c0&gt;&gt;</span><br><span class="line">   |    |    |    |    |    | &lt;UIImageView: 0x10d4be180; frame = (-3 -1; 30 30); opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170635620&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4a3210; frame = (276 40; 44 44); opaque = NO; layer = &lt;CALayer: 0x170428180&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x1027764c0; frame = (6.5 6.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x17422a9e0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4a4cb0; frame = (276 40; 44 44); hidden = YES; opaque = NO; layer = &lt;CALayer: 0x17042b500&gt;&gt;</span><br><span class="line">   |    |    | &lt;FloatingView: 0x10d4add90; frame = (45 124; 230 160); hidden = YES; layer = &lt;CALayer: 0x170429300&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d41c3a0; frame = (21 4; 50 50); opaque = NO; layer = &lt;CALayer: 0x1704330c0&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x102700650; frame = (0 0; 50 50); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x17422aa80&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d498e60; frame = (91 4; 50 50); opaque = NO; layer = &lt;CALayer: 0x1704249a0&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x102779690; frame = (0 0; 50 50); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x17423cb20&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4ae9f0; frame = (91 56; 50 50); opaque = NO; layer = &lt;CALayer: 0x170432e00&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x1027b2f20; frame = (0 0; 50 50); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x174229f00&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4b0900; frame = (21 106; 50 50); opaque = NO; layer = &lt;CALayer: 0x1704328e0&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x1026656e0; frame = (0 0; 50 50); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170634d20&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x102738580; frame = (91 106; 50 50); opaque = NO; tintColor = UIExtendedGrayColorSpace 1 1; layer = &lt;CALayer: 0x174223f40&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d497630; frame = (0 0; 50 50); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170634ba0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4b2960; frame = (161 4; 50 50); opaque = NO; tintColor = UIExtendedGrayColorSpace 1 1; layer = &lt;CALayer: 0x170425a80&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d43f260; frame = (0 0; 50 50); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170429160&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4b49a0; frame = (161 106; 50 50); opaque = NO; layer = &lt;CALayer: 0x170627b20&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d4b5500; frame = (0 0; 50 50); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x17042f880&gt;&gt;</span><br><span class="line">   |    |    | &lt;FloatingView: 0x10d4b67e0; frame = (-5 188; 62 192); layer = &lt;CALayer: 0x170630ae0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4b6d20; frame = (11 3.2; 44 44); opaque = NO; tintColor = UIExtendedGrayColorSpace 1 1; layer = &lt;CALayer: 0x170633160&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d436ff0; frame = (6.5 6.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170633ce0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4b7db0; frame = (11 50.4; 44 44); opaque = NO; tintColor = UIExtendedGrayColorSpace 1 1; layer = &lt;CALayer: 0x17062e040&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x1026a9ad0; frame = (6.5 6.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x1706337a0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4ba170; frame = (11 97.6; 44 44); opaque = NO; tintColor = UIExtendedGrayColorSpace 1 1; layer = &lt;CALayer: 0x170632760&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d402990; frame = (7 7; 30 30); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x1706344c0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4bc3b0; frame = (11 144.8; 44 44); opaque = NO; tintColor = UIExtendedGrayColorSpace 1 1; layer = &lt;CALayer: 0x170632c20&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x102797f20; frame = (6.5 6.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x174229de0&gt;&gt;</span><br><span class="line">   |    |    | &lt;FloatingView: 0x10d4b69a0; frame = (263 188; 62 192); layer = &lt;CALayer: 0x170632880&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4be440; frame = (6 3.2; 44 44); opaque = NO; tintColor = UIExtendedGrayColorSpace 1 1; layer = &lt;CALayer: 0x170632be0&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d44d340; frame = (6.5 6.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x17062a280&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4c04b0; frame = (6 50.4; 44 44); opaque = NO; tintColor = UIExtendedGrayColorSpace 1 1; layer = &lt;CALayer: 0x170629c00&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d434ed0; frame = (6.5 6.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170632940&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4c2490; frame = (6 97.6; 44 44); opaque = NO; tintColor = UIExtendedGrayColorSpace 1 1; layer = &lt;CALayer: 0x1702377c0&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10264f740; frame = (6.5 6.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170634b00&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4c4090; frame = (6 144.8; 44 44); opaque = NO; tintColor = UIExtendedSRGBColorSpace 0.192157 0.760784 0.486275 1; layer = &lt;CALayer: 0x17062e5a0&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x1026d5810; frame = (6.5 6.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x17062f7c0&gt;&gt;</span><br><span class="line">   |    |    | &lt;UILabel: 0x10d4c6020; frame = (0 448; 320 30); text = &apos;&apos;; alpha = 0; userInteractionEnabled = NO; layer = &lt;_UILabelLayer: 0x17048ae10&gt;&gt;</span><br><span class="line">   |    |    | &lt;UILabel: 0x10d4c6b50; frame = (0 284; 320 100); userInteractionEnabled = NO; layer = &lt;_UILabelLayer: 0x17048a780&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;_UILabelContentLayer: 0x1706337c0&gt; (layer)</span><br><span class="line">   |    |    | &lt;SingleHandRoundedRectView: 0x10d4d9d10; frame = (0 341; 227 227); hidden = YES; layer = &lt;CALayer: 0x170432e80&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIImageView: 0x10d4da0e0; frame = (0 0; 227 227); opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170432de0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4d5b80; frame = (80 165; 52 52); opaque = NO; layer = &lt;CALayer: 0x170632dc0&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10268c4f0; frame = (10.5 10.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170426d00&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4d1b10; frame = (150 160; 52 52); opaque = NO; layer = &lt;CALayer: 0x17062c6a0&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d40f400; frame = (10.5 10.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x17062abc0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4cfa80; frame = (105 75; 52 52); opaque = NO; layer = &lt;CALayer: 0x17062b9a0&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x1026c59a0; frame = (10.5 10.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170432940&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4d3af0; frame = (20 25; 52 52); opaque = NO; layer = &lt;CALayer: 0x170630e20&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d416a20; frame = (10.5 10.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x1706315a0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4d7870; frame = (10 95; 52 52); opaque = NO; layer = &lt;CALayer: 0x170433720&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d4a5d50; frame = (10.5 10.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170629d00&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4d9910; frame = (10 170; 52 52); opaque = NO; layer = &lt;CALayer: 0x170633c00&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d403130; frame = (10.5 10.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x1706265c0&gt;&gt;</span><br><span class="line">   |    |    | &lt;SingleHandRoundedRectView: 0x10d4e4690; frame = (93 341; 227 227); hidden = YES; layer = &lt;CALayer: 0x170630000&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIImageView: 0x10d4e4860; frame = (0 0; 227 227); opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x1706273c0&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4e0500; frame = (100 165; 52 52); opaque = NO; layer = &lt;CALayer: 0x170424ba0&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d4006c0; frame = (10.5 10.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170632d60&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4dc490; frame = (25 160; 52 52); opaque = NO; layer = &lt;CALayer: 0x170633100&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x102655f40; frame = (10.5 10.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170632360&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4da2d0; frame = (75 75; 52 52); opaque = NO; layer = &lt;CALayer: 0x170633180&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x1026894c0; frame = (10.5 10.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x17062f220&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4de470; frame = (165 25; 52 52); opaque = NO; layer = &lt;CALayer: 0x170433580&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10266a930; frame = (10.5 10.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x17042f800&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4e21f0; frame = (165 95; 52 52); opaque = NO; layer = &lt;CALayer: 0x170433920&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x10d42adc0; frame = (10.5 10.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170426c40&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIButton: 0x10d4e4290; frame = (170 170; 52 52); opaque = NO; layer = &lt;CALayer: 0x1704293e0&gt;&gt;</span><br><span class="line">   |    |    |    |    | &lt;UIImageView: 0x102663010; frame = (10.5 10.5; 31 31); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170426700&gt;&gt;</span><br><span class="line">   |    |    | &lt;UIButton: 0x10d4e4a50; frame = (260 258; 52 52); hidden = YES; opaque = NO; layer = &lt;CALayer: 0x17062eb20&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIImageView: 0x10d41df50; frame = (1 1; 50 50); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x170432820&gt;&gt;</span><br><span class="line">   |    |    | &lt;UIButton: 0x10d4e4d20; frame = (10 258; 52 52); hidden = YES; opaque = NO; layer = &lt;CALayer: 0x17062cf60&gt;&gt;</span><br><span class="line">   |    |    |    | &lt;UIImageView: 0x1026f92a0; frame = (1 1; 50 50); clipsToBounds = YES; opaque = NO; userInteractionEnabled = NO; layer = &lt;CALayer: 0x1704270e0&gt;&gt;`</span><br></pre></td></tr></table></figure><p>这里需要说明的是，<code>[[UIApp keyWindow] recursiveDescription].toString()</code>是查看当前页面的所有view。稍微仔细点的同学就会主要到，每次进入播放界面时，界面上方都有一个banner，内容是<code>Buy the full version to remove ads?</code>.所以简单的方式是，通过搜索关键字查找控件。可得到如下结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;UILabel: 0x10271ed60; frame = (60 0; 260 50); text = &apos;Buy the full version to r...&apos;; userInteractionEnabled = NO;</span><br></pre></td></tr></table></figure><p>我们可以在后面进行lldb调试的时候，根据这个为依据进行查找调试。</p><p>5、利用debugserver结合LLDB调试app</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debugserver *:1234 -a &quot;OPlayer Lite&quot;</span><br></pre></td></tr></table></figure><p>6、新建终端LLDB连接App</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lldb</span><br><span class="line">process connect connect://172.20.128.176:1234</span><br></pre></td></tr></table></figure><p>7、接下来查看偏移地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">image list -o -f</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[  0] 0x000000000005c000 /var/containers/Bundle/Application/AAAB1B0F-A9A6-455C-BE5B-8E0230A75252/OPlayer Lite.app/OPlayer Lite(0x000000010005c000)</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">[  7] 0x0000000000350000 /Users/weihua/Library/Developer/Xcode/iOS DeviceSupport/10.3.1 (14E304)/Symbols/System/Library/Frameworks/UIKit.framework/UIKit</span><br></pre></td></tr></table></figure><p>通过hopper v4分析<code>addSubview</code>在UIKit框架的偏移地址：<br>addSubview:0x0000000187775d24</p><p>通过<code>image list -o -f</code>分析UIKit框架在模块中加载的的起始偏移地址：<br>UIKit: 0x0000000000350000</p><p>设置断点：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">br s -a 0x0000000000350000+0x0000000187775d24</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">* thread #1, queue = &apos;com.apple.main-thread&apos;, stop reason = breakpoint 1.1</span><br><span class="line">    frame #0: 0x0000000187ac5d24 UIKit`-[UIView(Hierarchy) addSubview:]</span><br><span class="line">UIKit`-[UIView(Hierarchy) addSubview:]:</span><br><span class="line">-&gt;  0x187ac5d24 &lt;+0&gt;:  stp    x24, x23, [sp, #-0x40]!</span><br><span class="line">    0x187ac5d28 &lt;+4&gt;:  stp    x22, x21, [sp, #0x10]</span><br><span class="line">    0x187ac5d2c &lt;+8&gt;:  stp    x20, x19, [sp, #0x20]</span><br><span class="line">    0x187ac5d30 &lt;+12&gt;: stp    x29, x30, [sp, #0x30]</span><br><span class="line">Target 0: (OPlayer Lite) stopped.</span><br><span class="line">(lldb) po $x2</span><br><span class="line">&lt;PlayerView: 0x1027f27d0; frame = (0 0; 568 320); layer = &lt;CAEAGLLayer: 0x1704298c0&gt;&gt;</span><br><span class="line"></span><br><span class="line">(lldb) c</span><br><span class="line">Process 432 resuming</span><br><span class="line">Process 432 stopped</span><br><span class="line">* thread #1, queue = &apos;com.apple.main-thread&apos;, stop reason = breakpoint 1.1</span><br><span class="line">    frame #0: 0x0000000187ac5d24 UIKit`-[UIView(Hierarchy) addSubview:]</span><br><span class="line">UIKit`-[UIView(Hierarchy) addSubview:]:</span><br><span class="line">-&gt;  0x187ac5d24 &lt;+0&gt;:  stp    x24, x23, [sp, #-0x40]!</span><br><span class="line">    0x187ac5d28 &lt;+4&gt;:  stp    x22, x21, [sp, #0x10]</span><br><span class="line">    0x187ac5d2c &lt;+8&gt;:  stp    x20, x19, [sp, #0x20]</span><br><span class="line">    0x187ac5d30 &lt;+12&gt;: stp    x29, x30, [sp, #0x30]</span><br><span class="line">Target 0: (OPlayer Lite) stopped.</span><br><span class="line">(lldb) po $x2</span><br><span class="line">&lt;UIView: 0x1027f32a0; frame = (0 0; 568 320); layer = &lt;CALayer: 0x17042dc40&gt;&gt;</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">(lldb) po $x2</span><br><span class="line">&lt;UILayoutContainerView: 0x1027700d0; frame = (0 0; 320 568); autoresize = W+H; layer = &lt;CALayer: 0x1702374e0&gt;&gt;</span><br><span class="line"></span><br><span class="line">(lldb) c</span><br><span class="line">Process 432 resuming</span><br><span class="line">Process 432 stopped</span><br><span class="line">* thread #1, queue = &apos;com.apple.main-thread&apos;, stop reason = breakpoint 1.1</span><br><span class="line">    frame #0: 0x0000000187ac5d24 UIKit`-[UIView(Hierarchy) addSubview:]</span><br><span class="line">UIKit`-[UIView(Hierarchy) addSubview:]:</span><br><span class="line">-&gt;  0x187ac5d24 &lt;+0&gt;:  stp    x24, x23, [sp, #-0x40]!</span><br><span class="line">    0x187ac5d28 &lt;+4&gt;:  stp    x22, x21, [sp, #0x10]</span><br><span class="line">    0x187ac5d2c &lt;+8&gt;:  stp    x20, x19, [sp, #0x20]</span><br><span class="line">    0x187ac5d30 &lt;+12&gt;: stp    x29, x30, [sp, #0x30]</span><br><span class="line">Target 0: (OPlayer Lite) stopped.</span><br><span class="line">(lldb) po $x2</span><br><span class="line">&lt;UIButton: 0x10f23eb00; frame = (0 0; 320 50); opaque = NO; layer = &lt;CALayer: 0x17042e180&gt;&gt;</span><br><span class="line"></span><br><span class="line">(lldb) c</span><br><span class="line">Process 432 resuming</span><br><span class="line">Process 432 stopped</span><br><span class="line">* thread #1, queue = &apos;com.apple.main-thread&apos;, stop reason = breakpoint 1.1</span><br><span class="line">    frame #0: 0x0000000187ac5d24 UIKit`-[UIView(Hierarchy) addSubview:]</span><br><span class="line">UIKit`-[UIView(Hierarchy) addSubview:]:</span><br><span class="line">-&gt;  0x187ac5d24 &lt;+0&gt;:  stp    x24, x23, [sp, #-0x40]!</span><br><span class="line">    0x187ac5d28 &lt;+4&gt;:  stp    x22, x21, [sp, #0x10]</span><br><span class="line">    0x187ac5d2c &lt;+8&gt;:  stp    x20, x19, [sp, #0x20]</span><br><span class="line">    0x187ac5d30 &lt;+12&gt;: stp    x29, x30, [sp, #0x30]</span><br><span class="line">Target 0: (OPlayer Lite) stopped.</span><br><span class="line">(lldb) po $x2</span><br><span class="line">&lt;UILabel: 0x10f2009b0; frame = (60 0; 260 50); text = &apos;Buy the full version to r...&apos;; userInteractionEnabled = NO; layer = &lt;_UILabelLayer: 0x17028bc70&gt;&gt;</span><br></pre></td></tr></table></figure><p>到此为止找到了相关控件，然后通过<code>ni</code>命令往回追溯目标模块调用时的起始地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">(lldb) ni</span><br><span class="line">Process 432 stopped</span><br><span class="line">* thread #1, queue = &apos;com.apple.main-thread&apos;, stop reason = instruction step over</span><br><span class="line">    frame #0: 0x0000000187ac5d28 UIKit`-[UIView(Hierarchy) addSubview:] + 4</span><br><span class="line">UIKit`-[UIView(Hierarchy) addSubview:]:</span><br><span class="line">-&gt;  0x187ac5d28 &lt;+4&gt;:  stp    x22, x21, [sp, #0x10]</span><br><span class="line">    0x187ac5d2c &lt;+8&gt;:  stp    x20, x19, [sp, #0x20]</span><br><span class="line">    0x187ac5d30 &lt;+12&gt;: stp    x29, x30, [sp, #0x30]</span><br><span class="line">    0x187ac5d34 &lt;+16&gt;: add    x29, sp, #0x30            ; =0x30 </span><br><span class="line">Target 0: (OPlayer Lite) stopped.</span><br><span class="line">(lldb)  </span><br><span class="line">Process 432 stopped</span><br><span class="line">* thread #1, queue = &apos;com.apple.main-thread&apos;, stop reason = instruction step over</span><br><span class="line">    frame #0: 0x0000000187ac5d2c UIKit`-[UIView(Hierarchy) addSubview:] + 8</span><br><span class="line">UIKit`-[UIView(Hierarchy) addSubview:]:</span><br><span class="line">-&gt;  0x187ac5d2c &lt;+8&gt;:  stp    x20, x19, [sp, #0x20]</span><br><span class="line">    0x187ac5d30 &lt;+12&gt;: stp    x29, x30, [sp, #0x30]</span><br><span class="line">    0x187ac5d34 &lt;+16&gt;: add    x29, sp, #0x30            ; =0x30 </span><br><span class="line">    0x187ac5d38 &lt;+20&gt;: mov    x20, x0</span><br><span class="line">Target 0: (OPlayer Lite) stopped.</span><br><span class="line">(lldb)  </span><br><span class="line">(lldb) </span><br><span class="line">error: invalid thread</span><br><span class="line">Process 432 stopped</span><br><span class="line">* thread #1, queue = &apos;com.apple.main-thread&apos;, stop reason = instruction step over</span><br><span class="line">    frame #0: 0x0000000187ac5d30 UIKit`-[UIView(Hierarchy) addSubview:] + 12</span><br><span class="line">UIKit`-[UIView(Hierarchy) addSubview:]:</span><br><span class="line">-&gt;  0x187ac5d30 &lt;+12&gt;: stp    x29, x30, [sp, #0x30]</span><br><span class="line">    0x187ac5d34 &lt;+16&gt;: add    x29, sp, #0x30            ; =0x30 </span><br><span class="line">    0x187ac5d38 &lt;+20&gt;: mov    x20, x0</span><br><span class="line">    0x187ac5d3c &lt;+24&gt;: mov    x0, x2</span><br><span class="line">Target 0: (OPlayer Lite) stopped.</span><br><span class="line">(lldb)  </span><br><span class="line"> </span><br><span class="line"> ........</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">Process 432 stopped</span><br><span class="line">* thread #1, queue = &apos;com.apple.main-thread&apos;, stop reason = instruction step over</span><br><span class="line">    frame #0: 0x0000000187ac6074 UIKit`-[UIView(Hierarchy) addSubview:] + 848</span><br><span class="line">UIKit`-[UIView(Hierarchy) addSubview:]:</span><br><span class="line">-&gt;  0x187ac6074 &lt;+848&gt;: b      0x180414250               ; objc_release</span><br><span class="line"></span><br><span class="line">UIKit`-[UIView(Internal) _addSubview:positioned:relativeTo:]:</span><br><span class="line">    0x187ac6078 &lt;+0&gt;:   stp    x28, x27, [sp, #-0x60]!</span><br><span class="line">    0x187ac607c &lt;+4&gt;:   stp    x26, x25, [sp, #0x10]</span><br><span class="line">    0x187ac6080 &lt;+8&gt;:   stp    x24, x23, [sp, #0x20]</span><br><span class="line">Target 0: (OPlayer Lite) stopped.</span><br><span class="line">(lldb)  </span><br><span class="line">Process 432 stopped</span><br><span class="line">* thread #1, queue = &apos;com.apple.main-thread&apos;, stop reason = instruction step over</span><br><span class="line">    frame #0: 0x00000001003d01f8 OPlayer Lite`_mh_execute_header + 3621368</span><br><span class="line">OPlayer Lite`_mh_execute_header:</span><br><span class="line">-&gt;  0x1003d01f8 &lt;+3621368&gt;: adrp   x8, 5089</span><br><span class="line">    0x1003d01fc &lt;+3621372&gt;: ldr    x20, [x8, #0x630]</span><br><span class="line">    0x1003d0200 &lt;+3621376&gt;: mov    x0, x19</span><br><span class="line">    0x1003d0204 &lt;+3621380&gt;: mov    x1, x20</span><br><span class="line">Target 0: (OPlayer Lite) stopped.</span><br><span class="line">(lldb)  </span><br><span class="line">Process 432 stopped</span><br><span class="line">* thread #1, queue = &apos;com.apple.main-thread&apos;, stop reason = instruction step over</span><br><span class="line">    frame #0: 0x00000001003d01fc OPlayer Lite`_mh_execute_header + 3621372</span><br><span class="line">OPlayer Lite`_mh_execute_header:</span><br><span class="line">-&gt;  0x1003d01fc &lt;+3621372&gt;: ldr    x20, [x8, #0x630]</span><br><span class="line">    0x1003d0200 &lt;+3621376&gt;: mov    x0, x19</span><br><span class="line">    0x1003d0204 &lt;+3621380&gt;: mov    x1, x20</span><br><span class="line">    0x1003d0208 &lt;+3621384&gt;: bl     0x10106f28c               ; symbol stub for: objc_msgSend</span><br><span class="line">Target 0: (OPlayer Lite) stopped.</span><br></pre></td></tr></table></figure><p>由结果看来，<code>OPlayer Lite</code>模块起始基地址为<code>0x1003d01f8</code>，<br>然后通过减去<code>OPlayer Lite</code>偏移地址<code>0x000000000005c000</code>,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(lldb) p/x 0x1003d01f8-0x000000000005c000</span><br><span class="line">(long) $74 = 0x00000001003741f8</span><br></pre></td></tr></table></figure><p>然后把<code>0x00000001003741f8</code>放入已经打开的Hopper Disassembler v4中，用快捷键<code>G</code>进行查找，结果如下：<br><img src="/2018/08/06/iOS逆向之移除Oplayer-lite广告/001.png" alt="01.png"></p><p>这里我们进行更加结果进行猜测，<code>addAds_OnLocalAds</code>很有可能是我们需要查找的结果。接下来，我们对其进行进行断点调试，先找到<code>addAds_OnLocalAds</code>的地址：</p><p><img src="/2018/08/06/iOS逆向之移除Oplayer-lite广告/002.png" alt="02.png"></p><p>地址为：<code>0x000000010037c518</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(lldb) p/x 0x000000010037c518+0x000000000005c000</span><br><span class="line">(long) $76 = 0x00000001003d8518</span><br></pre></td></tr></table></figure><p>可能此时设备卡顿不动，继续运行,并且移除所有命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(lldb) c</span><br><span class="line">Process 432 resuming</span><br><span class="line">(lldb) br del</span><br><span class="line">About to delete all breakpoints, do you want to do that?: [Y/n] y</span><br><span class="line">All breakpoints removed. (1 breakpoint)</span><br></pre></td></tr></table></figure><p>重新设置断点,即<code>addAds_OnLocalAds</code>处设置断点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">br s -a 0x00000001003d8518</span><br></pre></td></tr></table></figure><p>然后返回上一界面，重新播放视频，此时命令行输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* thread #1, queue = &apos;com.apple.main-thread&apos;, stop reason = breakpoint 2.1</span><br><span class="line">    frame #0: 0x00000001003d8518 OPlayer Lite`_mh_execute_header + 3654936</span><br><span class="line">OPlayer Lite`_mh_execute_header:</span><br><span class="line">-&gt;  0x1003d8518 &lt;+3654936&gt;: stp    d9, d8, [sp, #-0x50]!</span><br><span class="line">    0x1003d851c &lt;+3654940&gt;: stp    x24, x23, [sp, #0x10]</span><br><span class="line">    0x1003d8520 &lt;+3654944&gt;: stp    x22, x21, [sp, #0x20]</span><br><span class="line">    0x1003d8524 &lt;+3654948&gt;: stp    x20, x19, [sp, #0x30]</span><br><span class="line">Target 0: (OPlayer Lite) stopped.</span><br><span class="line">(lldb)</span><br></pre></td></tr></table></figure><p>接下来获取名称及地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(lldb) p (char*)$x1</span><br><span class="line">(char *) $78 = 0x0000000101454c97 &quot;addAds_OnLocalAds&quot;</span><br></pre></td></tr></table></figure><p>方法执行完以后应该返回的地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(lldb) p/x $lr</span><br><span class="line">(unsigned long) $83 = 0x00000001003d01f8</span><br><span class="line">(lldb) p/x 0x00000001003d01f8-0x000000000005c000</span><br><span class="line">(long) $84 = 0x00000001003741f8</span><br></pre></td></tr></table></figure><p><code>0x00000001003741f8</code>是我们需要的地址，根据这个地址可以在Hopper V4中进行跳转：</p><p><img src="/2018/08/06/iOS逆向之移除Oplayer-lite广告/003.png" alt="03.png"></p><p>在上图中，找了方法<code>addAds_OnLocalAds</code>方法，说明位置正确，然后根据汇编指令<code>cbnz</code>,可知这一处是一个判断语句。</p><p>最关键的信息是，我们还看到了在一个”PlayViewController”控制器中存在一个’localAdView’的成员变量。</p><p>同时继续往上继续查找，可以找到该方法是在<code>[PlayViewController viewWillAppear:]</code>中调用的，如下图：<br><img src="/2018/08/06/iOS逆向之移除Oplayer-lite广告/004.png" alt="04.png"></p><p>接下来，我们进行确认。</p><p>通过<code>class-dump</code>的方式获取头文件。这里不说具体原因了，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class-dump OPlayer_Lite.decrypted -H -o header</span><br></pre></td></tr></table></figure><p>然后在header文件夹中可以进行确认。</p><p>OK，到此为止，我们已经找到了 广告加载的界面的了。我们需要通过工程来进行最后的实现。</p><h3 id="三、MonkeyDev调试定位"><a href="#三、MonkeyDev调试定位" class="headerlink" title="三、MonkeyDev调试定位"></a>三、MonkeyDev调试定位</h3><p>这里为了简单，我采用了MonkeyDev来实现，当然也可以通过 Theos 的方式，笔者亲测成功！！！</p><p>关于如何安装MonkeyDev，请移步<a href="https://github.com/AloneMonkey/MonkeyDev/wiki/%E5%AE%89%E8%A3%85" target="_blank" rel="noopener">MonkeyDev安装教程及简介</a>。</p><p>需要说明的是，MonkeyDev的好处就是能通过界面调试app，定位控件，当然如果安装了Reveal那就更加简单，iOS上面的界面调试神器。但是<br>MonkeyDev需要已经破解了ipa，这里可以通过<code>Window上的PP助手</code>获取。</p><p>首先新建工程，命名<code>Oplayerlite</code>.其它的也不多了，直接贴关键代码。</p><p><img src="/2018/08/06/iOS逆向之移除Oplayer-lite广告/005.png" alt="07.png"></p><p>然后运行工程，发现之前的 ‘Buy the full version to remove ads?’ 相关的UIView已经没了，但是又出现了新的广告，以下截图来自Reveal，Xcode也可以。</p><p><img src="/2018/08/06/iOS逆向之移除Oplayer-lite广告/006.png" alt="08.png"></p><p>然后在<code>PlayViewController</code>中找到了相关的调用<code>GADBannerView *gAdView;</code>,然后通过头文件查找<code>GADBannerView</code>,结果找到了如下调用函数：</p><p><img src="/2018/08/06/iOS逆向之移除Oplayer-lite广告/007.png" alt="09.png"></p><p>此时抱着怀疑的态度试了修改工程中<code>OplayerliteDylib.xm</code>内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">// See http://iphonedevwiki.net/index.php/Logos</span><br><span class="line"></span><br><span class="line">#import &lt;UIKit/UIKit.h&gt;</span><br><span class="line"></span><br><span class="line">@interface PlayViewController</span><br><span class="line"></span><br><span class="line">@property(strong, nonatomic) UIView *localAdView;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">%hook PlayViewController</span><br><span class="line"></span><br><span class="line">- (void)viewWillAppear:(BOOL)arg1</span><br><span class="line">&#123;</span><br><span class="line">    self.localAdView = [[UIView alloc]initWithFrame:CGRectZero];</span><br><span class="line">    %orig;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">%end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">%hook GADBannerView</span><br><span class="line"></span><br><span class="line">- (void)setFrame:(struct CGRect)arg1</span><br><span class="line">&#123;</span><br><span class="line">    NSLog(@&quot;__%s__&quot;,__func__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">%end</span><br></pre></td></tr></table></figure><p>然后run一下，结果居然成功了。</p><p>OK，恭喜，到此为止真的实现了Oplayer lite播放时移除广告的功能。</p><h3 id="四、打包安装App至非越狱"><a href="#四、打包安装App至非越狱" class="headerlink" title="四、打包安装App至非越狱"></a>四、打包安装App至非越狱</h3><p>后面，我想这如何将此app安装的到非越狱的设备上。</p><p><img src="/2018/08/06/iOS逆向之移除Oplayer-lite广告/008.png" alt="10.png"></p><p>将此app进行到处，放入Payload文件中压缩，重命名为.ipa的文件。此时可能还无法进行安装，需要最后一步操作，进行ipa重签名。<br>具体请参考<a href="https://www.jianshu.com/p/f46f94983880" target="_blank" rel="noopener">iOS重签名操作</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>iOS开发之上线AppStore流程</title>
      <link href="/2018/06/07/iOS%E5%BC%80%E5%8F%91%E4%B9%8B%E4%B8%8A%E7%BA%BFAppStore%E6%B5%81%E7%A8%8B/"/>
      <url>/2018/06/07/iOS%E5%BC%80%E5%8F%91%E4%B9%8B%E4%B8%8A%E7%BA%BFAppStore%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>作为一个iOS开发者，不仅仅是能够写出优美的代码。最终的我们的目的是能我们的项目上线，就显示十分完美了。</p><p>由于每次上线或多或少的都会有细节无法注意到。现在就以公司某个项目上线为基础。详细描述关于iOS上线的流程。</p><p>一般分为三个部分：BundleID申请、发布证书申请、提交审核。</p><h3 id="一、BundleID申请"><a href="#一、BundleID申请" class="headerlink" title="一、BundleID申请"></a>一、BundleID申请</h3><p>公司一般都是多人开发，为了方便测试，在开发阶段使用企业版账号进行项目开发。在开发完成后需要进行app store 上架，这里可以通过更新项目的buildID来实现。通过测试可知，用两种方式可实现更新：</p><ul><li>直接更换成新的bundleID；</li><li>将企业版账号下的bundleID进行删除，然后在个人开发者账号再次创建。</li></ul><h5 id="创建步骤如下："><a href="#创建步骤如下：" class="headerlink" title="创建步骤如下："></a>创建步骤如下：</h5><p>1、登陆<a href="https://developer.apple.com/account" target="_blank" rel="noopener">https://developer.apple.com/account</a>，进入如下界面<br>    <img src="/2018/06/07/iOS开发之上线AppStore流程/1-01.png" alt="img"></p><p>2、点击证书描述文件管理，进入如下界面<br>    <img src="/2018/06/07/iOS开发之上线AppStore流程/1-02.png" alt="img"></p><p>3、接下点击上图中的“+”即可进行bundleID的创建，这里以<code>com.xxxxxx.testApp</code>为例<br>    <img src="/2018/06/07/iOS开发之上线AppStore流程/1-03.png" alt="img"></p><p>4、点击<code>continue</code>，跳转下一界面，如下：<br>    <img src="/2018/06/07/iOS开发之上线AppStore流程/1-04.png" alt="img"></p><p>5、点击上图<code>Register</code>按钮，跳转下一界面，如下：<br>    <img src="/2018/06/07/iOS开发之上线AppStore流程/1-05.png" alt="img"></p><p>6、点击上图<code>Done</code>按钮，表示已经完成新的bundleID创建。</p><h3 id="二、发布证书申请"><a href="#二、发布证书申请" class="headerlink" title="二、发布证书申请"></a>二、发布证书申请</h3><p>在申请发布证书之前，我们需要进行<code>CertificateSigningRequest</code>创建，因为后续在进行发布证书申请时需要。</p><p>1、在Mac上搜索<code>钥匙串访问</code>即可，然后按下图所示，进行创建。<br><img src="/2018/06/07/iOS开发之上线AppStore流程/2-01.png" alt="img"></p><p>2、出现如下界面时，需要将信息填写完整。需要注意的是，前面三个选项可以任意填写，但是最后一个选项<code>请求是</code>必须选择<code>存储到磁盘</code>。点击<code>继续</code>后，可将证书存储到桌面，此时桌面可看见<code>CertificateSigningRequest.certSigningRequest</code>的文件。<br><img src="/2018/06/07/iOS开发之上线AppStore流程/2-02.png" alt="img"></p><p>3、回到苹果个人开发者网站上，点击<code>Provisioning Profiles</code>下<code>Distribution</code>，结果如下：<br><img src="/2018/06/07/iOS开发之上线AppStore流程/2-03.png" alt="img"></p><p>4、点击上图<code>+</code>按钮，出现如下界面，需要进行发布证书类型的选择，这里直接选择<code>App Store</code>，意味着我们需要申请的是AppStore发布证书，然后点击<code>Continue</code><br><img src="/2018/06/07/iOS开发之上线AppStore流程/2-04.png" alt="img"></p><p>5、接下来需要进行bundleID的绑定，此处应与第一部分中的第三小步中创建的bunldeid保持一致。(此处因示例原因，未保持一致)<br><img src="/2018/06/07/iOS开发之上线AppStore流程/2-05.png" alt="img"></p><p>6、点击上图中<code>Continue</code>后，出现如下界面，进行签名证书的选择<br><img src="/2018/06/07/iOS开发之上线AppStore流程/2-0601.png" alt="img"></p><p>需要注意的是：<br>此步骤可能出现另外一种情况，可能不存在选项，需要创建签名证书，此时这需要用到第1、2步中说创建的<code>CertificateSigningRequest</code>证书了。<br><img src="/2018/06/07/iOS开发之上线AppStore流程/2-0602.png" alt="img"></p><p>7、接下来，添加证书生成后的文件名称。<br><img src="/2018/06/07/iOS开发之上线AppStore流程/2-07.png" alt="img"></p><p>8、点击继续后即可进入下一个界面，点击<code>Download</code>，完成证书下载。<br><img src="/2018/06/07/iOS开发之上线AppStore流程/2-08.png" alt="img"></p><p>9、最后进入下载文件夹，找到刚刚生成的发布证书，并双击，将证书加入<code>钥匙串访问</code>中。<br><img src="/2018/06/07/iOS开发之上线AppStore流程/2-09.png" alt="img"></p><h3 id="三、提交审核"><a href="#三、提交审核" class="headerlink" title="三、提交审核"></a>三、提交审核</h3><p>终于来到了最后的提交审核阶段阶段。其中为了更完整的完整的描述此部分的操作详情，将操作分为三个阶段：</p><ul><li>在App Store Contect上先创建应用，必将应用信息填写完整；</li><li>完成工程项目的打包任务，并选择上传至AppStore平台；</li><li>将上传的iPa包与创建的应用进行绑定，并提交审核。</li></ul><h5 id="1、在App-Store-Connect上先创建应用，必将应用信息填写完整"><a href="#1、在App-Store-Connect上先创建应用，必将应用信息填写完整" class="headerlink" title="1、在App Store Connect上先创建应用，必将应用信息填写完整"></a>1、在App Store Connect上先创建应用，必将应用信息填写完整</h5><p>(1)开始创建应用<br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-0101.png" alt="img"><br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-0102.png" alt="img"></p><p>(2)填写应用名称，选择目标bundleID<br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-02.png" alt="img"></p><p>(3)填写应用信息<br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-03.png" alt="img"></p><p>(4)更新app价格与销售范围<br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-04.png" alt="img"></p><p>(5)在准备提交选项内继续完善信息填写<br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-05.png" alt="img"></p><h5 id="2、完成工程项目的打包任务，并选择上传至AppStore平台"><a href="#2、完成工程项目的打包任务，并选择上传至AppStore平台" class="headerlink" title="2、完成工程项目的打包任务，并选择上传至AppStore平台"></a>2、完成工程项目的打包任务，并选择上传至AppStore平台</h5><p>(1)打开Xcode，然后选择账号，开始进行Arachive，操作步骤如下<br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-06.png" alt="img"><br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-07.png" alt="img"></p><p>(2)接下来，进行上传ipa的操作，如下所示<br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-08.png" alt="img"><br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-09.png" alt="img"><br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-10.png" alt="img"><br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-11.png" alt="img"><br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-12.png" alt="img"></p><hr><p>需要注意的是：</p><p>一般在进行这一步时，苹果会进行ipa的初步检测，包括权限控制、icon、luanch图片使用的合法性!</p><hr><p>当上传没有问题后，最后会出现如下结果!<br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-13.png" alt="img"></p><p>至此为止，完成ipa上传流程!!!</p><h5 id="3、将上传的iPa包与创建的应用进行绑定，并提交审核"><a href="#3、将上传的iPa包与创建的应用进行绑定，并提交审核" class="headerlink" title="3、将上传的iPa包与创建的应用进行绑定，并提交审核"></a>3、将上传的iPa包与创建的应用进行绑定，并提交审核</h5><p>(1)打开App Store Contect，在<code>准备提交</code>选项中，找到<code>构建版本</code>，选择刚刚上传的版本记录<br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-14.png" alt="img"><br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-15.png" alt="img"></p><p>(2)点击<code>存储</code>，然后完成接下来的提交流程<br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-16.png" alt="img"><br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-17.png" alt="img"><br>点击上图中<code>提交</code>按钮，完成提交流程</p><p>(3)完成提交流程后，会自动跳转如下界面，至此已完成整个iOS上架打包流程<br><img src="/2018/06/07/iOS开发之上线AppStore流程/3-18.png" alt="img"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac上搭建Hexo的Github个人博客</title>
      <link href="/2016/03/21/Mac%E4%B8%8A%E6%90%AD%E5%BB%BAHexo%E7%9A%84Github%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2016/03/21/Mac%E4%B8%8A%E6%90%AD%E5%BB%BAHexo%E7%9A%84Github%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>作为一个NB的程序员，必须要有一个属于自己的blog。<br>市面上大多数人常有的blog网站有<a href="https://bbs.csdn.net/forums/ios" target="_blank" rel="noopener"><code>CSDN</code></a>、<a href="https://juejin.im/welcome/ios" target="_blank" rel="noopener"><code>掘金</code></a>、<a href="https://juejin.im/welcome/ios" target="_blank" rel="noopener"><code>我是开发者</code></a>、<a href="https://www.oschina.net/ios/codingList" target="_blank" rel="noopener"><code>oschina</code></a>、<a href="http://www.cocoachina.com/" target="_blank" rel="noopener"><code>cocoachina</code></a>、<a href="https://www.jianshu.com/" target="_blank" rel="noopener"><code>简书</code></a>。</p><h3 id="一、Node、npm、git环境安装"><a href="#一、Node、npm、git环境安装" class="headerlink" title="一、Node、npm、git环境安装"></a>一、Node、npm、git环境安装</h3><p>因为大多数程序员Mac电脑都支持或已经具备基本。本教程不做Nodejs、git环境的安装，如未安装，请自行百度。仅做简单的验证操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ node -v</span><br><span class="line">v10.8.0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ npm -v</span><br><span class="line">6.2.0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ git --version</span><br><span class="line">git version 2.17.2 (Apple Git-113)</span><br></pre></td></tr></table></figure><h3 id="二、Hexo配置"><a href="#二、Hexo配置" class="headerlink" title="二、Hexo配置"></a>二、Hexo配置</h3><p>关于Hexo：<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo官网</a></p><p>安装部署命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>安装完成后如何新建Blog？</p><h5 id="1、新建文件夹MyGithubBlog，即项目名，用于放资源"><a href="#1、新建文件夹MyGithubBlog，即项目名，用于放资源" class="headerlink" title="1、新建文件夹MyGithubBlog，即项目名，用于放资源"></a>1、新建文件夹<code>MyGithubBlog</code>，即项目名，用于放资源</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MyProject git:(master) ✗ mkdir MyGithubBlog</span><br></pre></td></tr></table></figure><h5 id="2、进入文件夹中，并进行初始化工作"><a href="#2、进入文件夹中，并进行初始化工作" class="headerlink" title="2、进入文件夹中，并进行初始化工作"></a>2、进入文件夹中，并进行初始化工作</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  MyProject git:(master) ✗ cd MyGithubBlog </span><br><span class="line">➜  MyGithubBlog git:(master) ✗ hexo init</span><br></pre></td></tr></table></figure><p>进度如下：<br><img src="/2016/03/21/Mac上搭建Hexo的Github个人博客/001.jpg" alt></p><h5 id="3、基础插件配置"><a href="#3、基础插件配置" class="headerlink" title="3、基础插件配置"></a>3、基础插件配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">✗ hexo install</span><br></pre></td></tr></table></figure><h5 id="4、开始本地服务"><a href="#4、开始本地服务" class="headerlink" title="4、开始本地服务"></a>4、开始本地服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">➜  MyGithubBlog git:(master) ✗ hexo g      </span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded in 134 ms</span><br><span class="line">INFO  Generated: index.html</span><br><span class="line">INFO  Generated: archives/index.html</span><br><span class="line">INFO  Generated: 2019/03/21/hello-world/index.html</span><br><span class="line">INFO  Generated: archives/2019/index.html</span><br><span class="line">INFO  Generated: archives/2019/03/index.html</span><br><span class="line">INFO  5 files generated in 195 ms</span><br><span class="line">➜  MyGithubBlog git:(master) ✗ hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><h5 id="5、访问http-localhost-4000，可以出现如下页面"><a href="#5、访问http-localhost-4000，可以出现如下页面" class="headerlink" title="5、访问http://localhost:4000，可以出现如下页面"></a>5、访问<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>，可以出现如下页面</h5><p><img src="/2016/03/21/Mac上搭建Hexo的Github个人博客/002.jpg" alt></p><h3 id="三、使用github-pages"><a href="#三、使用github-pages" class="headerlink" title="三、使用github pages"></a>三、使用github pages</h3><p>github pages是给开发者建立一个私人页面，免费且没有空间流量限制。每个github账号都可以创建一个github pages项目。</p><h5 id="1、创建github-pages项目"><a href="#1、创建github-pages项目" class="headerlink" title="1、创建github pages项目"></a>1、创建github pages项目</h5><p>在github上新建一个项目，项目的名称必须是（你的用户名.github.io)才行</p><p><img src="/2016/03/21/Mac上搭建Hexo的Github个人博客/003.jpg" alt></p><h5 id="2、配置git信息-方便hexo和github通过ssh通信"><a href="#2、配置git信息-方便hexo和github通过ssh通信" class="headerlink" title="2、配置git信息(方便hexo和github通过ssh通信)"></a>2、配置git信息(方便hexo和github通过ssh通信)</h5><p>如何配置，公司使用过gitlab或常用Coding的童鞋应该知道，不再废话，属于基本操作。</p><h3 id="四、配置Deployment"><a href="#四、配置Deployment" class="headerlink" title="四、配置Deployment"></a>四、配置Deployment</h3><p>在MyGithubBlog项目根目录下里找到_config.yml文件，找到Deployment，然后按照如下修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git </span><br><span class="line">  repo: git@github.com:1019459067/1019459067.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h3 id="五、安装-hexo-deployer-git自动部署发布工具"><a href="#五、安装-hexo-deployer-git自动部署发布工具" class="headerlink" title="五、安装 hexo-deployer-git自动部署发布工具"></a>五、安装 hexo-deployer-git自动部署发布工具</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm audit fix</span><br></pre></td></tr></table></figure><h3 id="六、生成静态文件部署到github"><a href="#六、生成静态文件部署到github" class="headerlink" title="六、生成静态文件部署到github"></a>六、生成静态文件部署到github</h3><p>通过命令hexo clean &amp;&amp; hexo g &amp;&amp; hexo d，发布到github</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  MyGithubBlog git:(master) ✗ hexo clean</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  MyGithubBlog git:(master) ✗ hexo g</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  MyGithubBlog git:(master) ✗ hexo d</span><br></pre></td></tr></table></figure><p>通过链接就可以进行访问：<a href="https://1019459067.github.io/" target="_blank" rel="noopener">https://1019459067.github.io</a></p><h3 id="七、更改模板，发布博客"><a href="#七、更改模板，发布博客" class="headerlink" title="七、更改模板，发布博客"></a>七、更改模板，发布博客</h3><p><a href="http://theme-next.iissnan.com" target="_blank" rel="noopener">next主题</a></p><p><a href="https://hexo.io/zh-cn/docs/writing" target="_blank" rel="noopener">hexo写作教程</a></p><h3 id="八、Hexo中添加本地图片"><a href="#八、Hexo中添加本地图片" class="headerlink" title="八、Hexo中添加本地图片"></a>八、Hexo中添加本地图片</h3><p>1、把主页配置文件<code>_config.yml</code>里的<code>post_asset_folder:</code>这个选项设置为<code>true</code></p><p>2、在你的hexo目录下执行这样一句话<code>npm install hexo-asset-image --save</code>，这是下载安装一个可以上传本地图片的插件，来自dalao：dalao的git</p><p>3、等待一小段时间后，再运行<code>hexo n &quot;xxxx&quot;</code>来生成md博文时，<code>/source/_posts</code>文件夹内除了xxxx.md文件还有一个同名的文件夹</p><p>4、最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![你想输入的替代文字](xxxx/图片名.jpg)</span><br></pre></td></tr></table></figure><p>注意： xxxx是这个md文件的名字，也是同名文件夹的名字。只需要有文件夹名字即可，不需要有什么绝对路径。你想引入的图片就只需要放入xxxx这个文件夹内就好了，很像引用相对路径。</p><p>5、最后检查一下，<code>hexo g</code>生成页面后，进入<code>public\2019\03\21\index.html</code>文件中查看相关字段，可以发现，html标签内的语句是<code>&lt;img src=&quot;2017/02/26/xxxx/图片名.jpg&quot;&gt;</code>，而不是<code>&lt;img src=&quot;xxxx/图片名.jpg&gt;</code>。这很重要，关乎你的网页是否可以真正加载你想插入的图片。</p><h3 id="九、为hexo和next增加站内搜索功能"><a href="#九、为hexo和next增加站内搜索功能" class="headerlink" title="九、为hexo和next增加站内搜索功能"></a>九、为hexo和next增加站内搜索功能</h3><h5 id="1、安装插件"><a href="#1、安装插件" class="headerlink" title="1、安装插件"></a>1、安装插件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search</span><br><span class="line">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure><h5 id="2、修改hexo配置"><a href="#2、修改hexo配置" class="headerlink" title="2、修改hexo配置"></a>2、修改hexo配置</h5><p>在你的hexo目录下的_config.yml中增加如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p>配置上之后，其实搜索已经配置完成了，但现在我们还看不到搜索的入口，接下来我们需要在next的主体上进行配置</p><h5 id="3、配置next中的搜索入口"><a href="#3、配置next中的搜索入口" class="headerlink" title="3、配置next中的搜索入口"></a>3、配置next中的搜索入口</h5><p>打开themes\next_config.yml，打开local search:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure><h5 id="4、接下来就重新运行就可以看到效果。"><a href="#4、接下来就重新运行就可以看到效果。" class="headerlink" title="4、接下来就重新运行就可以看到效果。"></a>4、接下来就重新运行就可以看到效果。</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
